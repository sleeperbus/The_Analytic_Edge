install.packages("mice")
library("mice")
simple = polling[c("Rasmussen", "SurveyUSA", "PropR", "DiffCount")]
polling = read.csv("PollingData.csv")
setwd("~/Dev/The_Analytic_Edge/Unit3")
polling = read.csv("PollingData.csv")
simple = polling[c("Rasmussen", "SurveyUSA", "PropR", "DiffCount")]
summary(polling)
summary(simple)
set.seed(144)
?complete
?mice
mice(simple)
x = mice(simple)
x
summary(x)
complete(x)
imputed = complete(mice(simple))
imputed
summary(imputed)
polling$Rasmussen = imputed$Rasmussen
polling$SurveyUSA = imputed$SurveyUSA
summary(polling)
train = subset(polling, Year %IN% (2004, 2008))
train = subset(polling, Year %IN% c(2004, 2008))
train = subset(polling, Year %in% c(2004, 2008))
summary(train)
table(train$Year)
test = subset(polling, Year==2012)
nrow(test)
table(train$Republican)
sign(20)
sign(-10)
table(sign(train$Rasmussen))
table(train$Republican, sign(train$Rasmussen))
Train = subset(polling, Year == 2004 | Year == 2008)
Test = subset(polling, Year == 2012)
nrow(Train)
nrow(Test)
table(Train$Republican)
53/100
table(Train$Republican)
table(Train$Republican, sing(Train$Rasmussen))
table(Train$Republican, sign(Train$Rasmussen))
table(sign(Train$R))
table(sign(Train$Rasmussen))
table(Train$Republican)
table(Train$Republican, sign(Train$Rasmussen))
52/53
42/47
cor(Train)
str(Train)
cor(Train[c("Rasmussen", "PropR", "DiffCount", "Republican")])
cor(Train[c("Rasmussen", "SurveyUSA", "PropR", "DiffCount", "Republican")])
mod1 = glm(Republican ~ PropR, data=Train,family="binomial")
summary(mod1)
pred1 = predict(mod1, type="response")
pred1
table(Train$Republican, pred1 > 0.5)
45/47
51/53
library(ROCR)
RORCpred = prediction(pred1, Train$Republican)
?performance
ROCRperf = performance(RORCpred, "tpr", "fpr")
plot(ROCRperf)
plot(ROCRperf, colorize=T)
plot(ROCRperf, colorize=T, print.cutoffs.at=seq(0,1,by=0.1))
plot(ROCRperf, colorize=T, print.cutoffs.at=seq(0,1,by=0.1), text.adj=c(-0.2,1.7))
summary(mod1)
cor(Train[c("Rasmussen", "SurveyUSA", "PropR", "DiffCount", "Republican")])
mod = glm(Republican ~ SurveyUSA+DiffCount, data=Train,family="binomial")
mod2 = glm(Republican ~ SurveyUSA+DiffCount, data=Train,family="binomial")
pred2 = prediction(mod2, type="response")
pred2 = prediction(mod2, type="response")
pred2 = predict(mod2, type="response")
table(Train$Republican, pred2 > 0.5)
table(Train$Republican, pred1 > 0.5)
summary(mod2)
summary(mod1)
table(Test$Republican, sign(Test$Rasmussen))
TestPrediction = predict(mod2, newdata=Test, type="response")
table(Test$Republican, TestPrediction > 0.5)
subset(Test, TestPrediction > 0.5 & Republican == 0)
summary(mod2)
songs = read.csv("songs.csv")
summary(songs)
str(songs)
table(songs$year)
songs$artistname == "Michael Jackson"
which(songs$artistname == "Michael Jackson")
length(which(songs$artistname == "Michael Jackson"))
(which(songs$artistname == "Michael Jackson"))
songs[(which(songs$artistname == "Michael Jackson")),]
which(songs$artistname == "Michael Jackson")
songs$songtitle[which(songs$artistname == "Michael Jackson")]
michale = subset(songs, songs$artistname == "Michale Jackson")
nrow(michale)
michael = subset(songs, songs$artistname == "Michael Jackson")
nrow(michael)
michael
michael$Top10 == 1
which(michael$Top10 == 1)
michael$songtitle[which(michael$Top10 == 1)]
michael
michael[c("songtitle", "Top10")]
table(songs$timesignature)
max(songs$tempo)
which.max(songs$tempo)
songs$songtitle[which.max(songs$tempo)]
songs = read.csv("songs.csv")
summary(songs)
str(songs)
table(songs$year)
michael = subset(songs, songs$artistname == "Michael Jackson")
michael$songtitle[which(michael$Top10 == 1)]
table(songs$timesignature)
songs$songtitle[which.max(songs$tempo)]
train = subset(songs, year <= 2009)
test = subset(songs, year >= 2010)
nonvars = c("year", "songtitle", "artistname", "songID", "artistID")
train = train[, !(names(train) %in% nonvars)]
test = test[, !(names(test) %in% nonvars)]
# model 1
mod1 = glm(Top10 ~ ., data=train, family=binomial)
summary(mod1)
cor(train$loudness, train$energy)
mod2 = glm(Top10 ~ . -loudness, data=train, family=binomial)
summary(mod2)
mod3 = glm(Top10 ~ . -energy, data=train, family=binomial)
summary(mod3)
pred3 = predict(mod3, newdata=test, type="response")
pred3
table(test$Top10, pred3 > 0.45)
prop.table(table(test$Top10, pred3 > 0.45))
0.82841823 + 0.05093834
library(ROCR)
ROCRpred = prediction(mod3, test$Top10)
ROCRpred = prediction(mod3, train$Top10)
ROCRpred = prediction(pred3, test$Top10)
ROCRperf = performacne(ROCRpred, "tpr", "fpr")
ROCRperf = performance(ROCRpred, "tpr", "fpr")
plot(ROCRperf)
plot(ROCRperf, colorize=T, print.cutoffs.at=seq(0,1,by=0.1))
plot(ROCRperf, colorize=T, print.cutoffs.at=seq(0,1,by=0.1), text.adj=c(0.2))
plot(ROCRperf, colorize=T, print.cutoffs.at=seq(0,1,by=0.1), text.adj=c(0, 1.7))
table(test$Top10)
prop.table(table(test$Top10))
19/59
309/314
