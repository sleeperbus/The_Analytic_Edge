<<<<<<< HEAD
ilbrary(swirl)
library(swirl)
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(c(y, z), 100)
is.na(myData)
myNa <- is.na(myData)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
c(x[3], xp5[, x[7]])
c(x[3], x[5][, x[7]])
c(x[3], x[5], x[7]])
c(x[3], x[5], x[7])
sqrt(c(x[3], x[5], x[7]))
info()
d
ds
c(3,5,7)
[c(3,5,7)]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo=11, bar = 2, norf = NA)
vect
names()
names(vect_)
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
vect2
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
swirl()
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4, 5)
dim(myVector)
View(myVector)
attributess(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix()
?matrix
myMatrix2 <- matrix(1:2)
myMatrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(myMatrix, myMatrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
?cbind
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myDa)
class(myData)
cnames <- c("patients", "aga", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData) <- cnames
myData
for (i in seq_along(1:10)) {}
for (i in seq_along(1:10)) {
print i
for (i in seq_along(1:10)) {
print i }
for (i in seq_along(1:10)) {
print i
}
for (i in seq_along(1:10)) {
print i
}
x <- c("a", "b", "c", "d")
for (i in 1:4) print x[i]
for (i in 1:4) print(x[i])
for (i in seq_along(x)) print(x[i])
for (letter in x) print(letter)
for (i in x) print(i)
x <- matrix(1:6, 2, 3)
for (j in seq_len(ncol(x
;
for (i in seq_len(nrow(x))) {
for (j in seq_len(ncol(x))) {
print(x[i,j])
}
}
?sd
args(lm)
args(sd)
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
cube(3)
square <- make.power(2)
square(3)
ls(enviroment(cube))
?environment
ls(environment(cube))
get("n", environment(cube))
environment(cube)
?ls
objects(cube)
objects(environment(cube))
?environment
x <- matrix(1:4, 2, 2)
y <- matrix(rep(10, 4), 2, 2)
y
x * y
x %*% y
swirl()
swirl()
cube <- function(x, n) {
X^3
}
X^3
}
cube <- function(x, n) {
X^3
}
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if (x > 5) {
x <- 0
}
x > 5
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if (x < 3) {
NA
} else {
10
}
y
?numeric
?`<<-`
getwd()
setwd("~/Dev/github/The_Analytic_Edge/Unit4")
claims = read.csv("ClaimsData.csv")
str(claims)
table(claims$bucket2008)
table(claims$bucket2009)
table(claims$bucket2009)/nrow(claims)
library(caTools)
set.seed(88)
split = sample.split(claims$bucket2009, SplitRatio=0.6)
train = subset(claims, split==T)
test = subset(claims, split==F)
summary(train)
subset(train, alzheimers == 1 | arthritis == 1 | cancer == 1 |)
names(train)
x = subset(train, alzheimers + arthritis + cancer + copd + depression + diabetes + heart.failure + ihd + kidny + osteoporosis + stroke > 1)
x = subset(train, alzheimers + arthritis + cancer + copd + depression + diabetes + heart.failure + ihd + kidney + osteoporosis + stroke > 1)
nrow(x)
nrow(train)
x = subset(train, alzheimers + arthritis + cancer + copd + depression + diabetes + heart.failure + ihd + kidney + osteoporosis + stroke > =1)
x = subset(train, alzheimers + arthritis + cancer + copd + depression + diabetes + heart.failure + ihd + kidney + osteoporosis + stroke >= 1)
nrow(x)
subset(train, diabets == 1)
subset(train, diabetes == 1)
nrow(subset(train, diabetes == 1))
prop.table(table(train$diabetes))
=======
setwd("~/Dev/The_Analytic_Edge/Unit4")
boston = read.csv("boston.csv")
str(boston)
plot(boston$LON, boston$LAT)
points(boston$LON[boston$CHAS==1], boston$LAG[boston$CHAS==1], col="red")
points(boston$LON[boston$CHAS==1], boston$LAG[boston$CHAS==1], col="red", pch=19)
plot(boston$LON, boston$LAT)
points(boston$LON[boston$CHAS==1], boston$LAG[boston$CHAS==1], col="red", pch=19)
plot(boston$LON, boston$LAT)
points(boston$LON[boston$CHAS==1], boston$LAG[boston$CHAS==1], col="red", pch=19)
points(boston$LON[boston$CHAS==1], boston$LAG[boston$CHAS==1], col="red", pch=19)
>>>>>>> 6ede611fdd63b188a7573e274f0ab4f4e00ab7a4
